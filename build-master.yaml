name: $(Build.BuildId)


variables:
- name: NUGET_PACKAGES # location of nuget packages (used by cache)
  value: $(Pipeline.Workspace)/.nuget/packages
- name: BRANCH # branch to be used
  value: master
- name: VERSION_NUMBER # version number of the build
  value: 0.0.1.$(Build.BuildId)

resources:
  repositories:
   - repository: origam-source
     type: github
     endpoint: https://github.com/origam/
     name: origam/origam-source
     ref: $(BRANCH)
   - repository: origam-html
     type: github
     endpoint: https://github.com/origam/
     name: origam/origam-html
     ref: $(BRANCH)


jobs:
  - job: BuildOrigam
    displayName: Build Origam
    pool:
      vmImage: windows-2019
    steps:
     - checkout: origam-source
     - checkout: origam-html
     - task: NuGetToolInstaller@0
       displayName: 'Use NuGet 5.8'
       inputs:
         versionSpec: 5.8
     - task: Cache@2
       displayName: 'NuGet Cache'
       inputs:
         key: 'nuget-2021-04-11-01 | "$(Agent.OS)" | $(Agent.BuildDirectory)/s/origam-source/**/*.sln,!$(Agent.BuildDirectory)/s/origam-source/**/bin/**'
         path: '$(NUGET_PACKAGES)'
         restoreKeys: 'nuget-2021-04-11-01 | "$(Agent.OS)"'
     - task: NuGetCommand@2
       displayName: 'NuGet restore'
       inputs:
         command: 'restore'
         restoreSolution: '$(Agent.BuildDirectory)/s/origam-source/**/*.sln'
         feedsToUse: 'select'
     - powershell: |
        $fileName = Get-ChildItem "**\AssemblyInfo.cs" -Recurse
        $filename | %{
         (gc $_) -replace "0.0.0.0", "$(VERSION_NUMBER)" |Set-Content $_.fullname
        }
        (Get-Content "$(Agent.BuildDirectory)\s\origam-source\Origam.ServerCore\Controller\AboutController.cs") -replace "Placeholder to be changed at build time", "$(VERSION_NUMBER)" | Set-Content "$(Agent.BuildDirectory)\s\origam-source\Origam.ServerCore\Controller\AboutController.cs"
       displayName: 'Build Number'
     - task: VSBuild@1
       displayName: 'Build Architect'
       inputs:
         solution: '$(Agent.BuildDirectory)/s/origam-source/**/*.sln'
         platform: 'Any CPU'
         configuration: 'Release Architect'
         msbuildArchitecture: 'x64'
     - task: VSTest@2
       displayName: 'Run Tests'
       inputs:
         testSelector: 'testAssemblies'
         testAssemblyVer2: |
           **\*test*.dll
           !**\*TestAdapter.dll
           !**\obj\**
         searchFolder: '$(Agent.BuildDirectory)\s\origam-source\'
     - task: CopyFiles@2
       displayName: 'Copy OrigamScheduler to: $(build.artifactstagingdirectory)\origam-architect'
       inputs:
         SourceFolder: '$(Agent.BuildDirectory)\s\origam-source\OrigamScheduler\bin\Release\'
         Contents: |
           **\*.dll
           **\*.exe
           **\*.pdb
         TargetFolder: '$(build.artifactstagingdirectory)\origam-architect'
       condition: succeededOrFailed()
     - task: CopyFiles@2
       displayName: 'Copy Architect to: $(build.artifactstagingdirectory)\origam-architect'
       inputs:
         SourceFolder: '$(Agent.BuildDirectory)\s\origam-source\OrigamArchitect\bin\Release\'
         Contents: |
           **\*.dll
           **\*.exe
           **\*.pdb
         TargetFolder: '$(build.artifactstagingdirectory)\origam-architect'
       condition: succeededOrFailed()
     - task: CopyFiles@2
       displayName: 'Copy External Architect Dlls to: $(build.artifactstagingdirectory)\origam-architect'
       inputs:
         SourceFolder: '$(Agent.BuildDirectory)\s\origam-source\'
         Contents: 'EnterpriseLibrary\Interop.MSCommLib.dll'
         TargetFolder: '$(build.artifactstagingdirectory)\origam-architect'
         flattenFolders: true
       condition: succeededOrFailed()
     - task: PublishBuildArtifacts@1
       displayName: 'Publish Artifact: origam-architect'
       inputs:
         PathtoPublish: '$(build.artifactstagingdirectory)\origam-architect'
         ArtifactName: origam-architect
       condition: succeededOrFailed()
     - task: VSBuild@1
       displayName: 'Build Client'
       inputs:
         solution: '$(Agent.BuildDirectory)/s/origam-source/**/*.sln'
         platform: 'Any CPU'
         configuration: 'Release Client'
         msbuildArchitecture: 'x64'
     - task: CopyFiles@2
       displayName: 'Copy OrigamScheduler to: $(build.artifactstagingdirectory)\origam-client'
       inputs:
         SourceFolder: '$(Agent.BuildDirectory)\s\origam-source\OrigamScheduler\bin\Release\'
         Contents: |
           **\*.dll
           **\*.exe
           **\*.pdb
         TargetFolder: '$(build.artifactstagingdirectory)\origam-client'
       condition: succeededOrFailed()
     - task: CopyFiles@2
       displayName: 'Copy Client to: $(build.artifactstagingdirectory)\origam-client'
       inputs:
         SourceFolder: '$(Agent.BuildDirectory)\s\origam-source\OrigamArchitect\bin\Release\'
         Contents: |
           **\*.dll
           **\*.exe
           **\*.pdb
         TargetFolder: '$(build.artifactstagingdirectory)\origam-client'
       condition: succeededOrFailed()
     - task: PublishBuildArtifacts@1
       displayName: 'Publish Artifact: origam-client'
       inputs:
         PathtoPublish: '$(build.artifactstagingdirectory)\origam-client'
         ArtifactName: origam-client
       condition: succeededOrFailed()
     - task: VSBuild@1
       displayName: 'Build Server'
       inputs:
         solution: '$(Agent.BuildDirectory)/s/origam-source/**/*.sln'
         platform: 'Any CPU'
         configuration: 'Release Server'
         msbuildArchitecture: 'x64'
     - task: MSBuild@1
       displayName: 'Build LDAPMembershipProvider'
       inputs:
         solution: $(Agent.BuildDirectory)/s/origam-source/ORIGAMMembershipProvider/LDAPMembershipProvider.csproj
         msbuildArchitecture: x64
         configuration: 'Release Server'
     - task: CopyFiles@2
       displayName: 'Copy Server Dlls to: $(build.artifactstagingdirectory)\origam-web\bin'
       inputs:
         SourceFolder: '$(Agent.BuildDirectory)\s\origam-source\Origam.Server\bin\Release\'
         Contents: |
           **\*.dll
           **\*.pdb
           **\*.exe
           !**\Microsoft.AspNetCore.Http.Abstractions.dll
           !**\Microsoft.Extensions.Configuration.Abstractions.dll
           !**\Microsoft.Extensions.Logging.Abstractions.dll
         TargetFolder: '$(build.artifactstagingdirectory)\origam-web\bin'
       condition: succeededOrFailed()
     - task: CopyFiles@2
       displayName: 'Copy External Dlls to: $(build.artifactstagingdirectory)\origam-web\bin'
       inputs:
         SourceFolder: '$(Agent.BuildDirectory)\s\origam-source\'
         Contents: |
           EnterpriseLibrary\FluorineFx.dll
           EnterpriseLibrary\Interop.MSCommLib.dll
           EnterpriseLibrary\Microsoft.AspNet.Identity.Owin.dll
           OrigamMembershipProvider\bin\Release\LDAPMembershipProvider.dll
           OrigamMembershipProvider\bin\Release\LDAPMembershipProvider.pdb
         TargetFolder: '$(build.artifactstagingdirectory)\origam-web\bin'
         flattenFolders: true
       condition: succeededOrFailed()
     - task: CopyFiles@2
       displayName: 'Copy Web Files to: $(build.artifactstagingdirectory)\origam-web'
       inputs:
         SourceFolder: '$(Agent.BuildDirectory)\s\origam-source\web'
         Contents: |
           css\**\*.*
           assets\**\*.*
           upgrade\**\*.*
           js\**\*.*
           bin\*.dll
           WEB-INF\**\*.*
           *
           !*.config
           !*.swf
           !*.aspx
         TargetFolder: '$(build.artifactstagingdirectory)\origam-web'
       condition: succeededOrFailed()
     - powershell: |
        $source = "$(Agent.BuildDirectory)\s\origam-source\web\App_Code\Startup.cs"; $destination = "$(build.artifactstagingdirectory)\origam-web\App_Code\Startup.cs_"
        # Create the folder structure and empty destination file, similar to
        # the Unix 'touch' command
        New-Item -ItemType File -Path $destination -Force
        Copy-Item $source $destination -Force
       displayName: 'Copy Startup.cs'
     - powershell: |
        Copy-Item $(Agent.BuildDirectory)\s\origam-source\web\Portal.swf $(build.artifactstagingdirectory)\origam-web\Portal_$(VERSION_NUMBER).swf
        Copy-Item $(Agent.BuildDirectory)\s\origam-source\web\Portal_dbg.swf $(build.artifactstagingdirectory)\origam-web\Portal_$(VERSION_NUMBER)_dbg.swf
        Copy-Item $(Agent.BuildDirectory)\s\origam-source\web\theme.swf $(build.artifactstagingdirectory)\origam-web\theme_$(VERSION_NUMBER).swf
        Copy-Item $(Agent.BuildDirectory)\s\origam-source\web\theme.swf $(build.artifactstagingdirectory)\origam-web\theme.swf
   
        $buildNumber = $($env:OrigamBuildNumber)
        $config = "<appPortalSettings><add key=`"swfFile`" value=`"Portal_$(VERSION_NUMBER)`"/><add key=`"themeFile`" value=`"theme_$(VERSION_NUMBER)`"/></appPortalSettings>"
        $config|Set-Content $(build.artifactstagingdirectory)\origam-web\portal.config
       displayName: 'Copy Flash UI'
     - task: PublishBuildArtifacts@1
       displayName: 'Publish Artifact: origam-web'
       inputs:
         PathtoPublish: '$(build.artifactstagingdirectory)\origam-web'
         ArtifactName: origam-web
       condition: succeededOrFailed()